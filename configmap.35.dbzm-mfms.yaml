apiVersion: v1
kind: ConfigMap
metadata:
  name: debezium-mfms
  namespace: dbzm-prod
data:
  dbzm-mfms.out_messages.connector.config.json: |-
    {
       "name": "messages",
       "config": {
          "connector.class": "io.debezium.connector.sqlserver.SqlServerConnector",
          "database.hostname": "192.168.1.2",
          "database.port": "1443",
          "database.user": "user",
          "database.password": "password",
          "database.dbname": "mfms",
          "database.server.name": "rdbo.prod.cdc.mfms",
          "table.include.list": "dbo.out_messages_tab",
          "column.include.list": "dbo.out_messages_tab.id,dbo.out_messages_tab.timestamp,dbo.out_messages_tab.external_id,dbo.out_messages_tab.subject,dbo.out_messages_tab.address,dbo.out_messages_tab.text,dbo.out_messages_tab.dlv_method,dbo.out_messages_tab.dlv_status,dbo.out_messages_tab.omt_id",
          "database.history.kafka.bootstrap.servers": "servername.domain.department:9093,servername",
          "database.history.kafka.topic": "rdbo.prod.cdct.dbhistory.mfms",
          "database.history.producer.security.protocol": "SSL",
          "database.history.producer.ssl..rrrtstore.location": "/kafka/.ssl/kafka.retail.prod..rrrtstore.jks",
          "database.history.producer.ssl..rrrtstore.password": "password",
          "database.history.consumer.security.protocol": "SSL",
          "database.history.consumer.ssl..rrrtstore.location": "/kafka/.ssl/kafka.retail.prod..rrrtstore.jks",
          "database.history.consumer.ssl..rrrtstore.password": "password",
          "time.precision.mode": "connect",
          "snapshot.mode": "schema_only",
          "snapshot.isolation.mode": "repeatable_read",
          "transforms": "AddPrefix,unwrap,filter",
          "transforms.AddPrefix.type": "org.apache.kafka.connect.transforms.RegexRouter",
          "transforms.AddPrefix.regex": "rdbo.prod.cdc.mfms.(.+)",
          "transforms.AddPrefix.replacement": "rdbo.prod.cdc.mfms.dbo.outmessagestab",
          "transforms.unwrap.type": "io.debezium.transforms.ExtractNewRecordState",
          "transforms.unwrap.add.fields": "op",
          "transforms.unwrap.drop.tombstones": "true",
          "transforms.unwrap.delete.handling.mode": "drop",
          "transforms.filter.type": "io.debezium.transforms.Filter",
          "transforms.filter.language": "jsr223.groovy",
          "transforms.filter.condition": "value.__op == 'c'",
          "transforms.filter.topic.regex": "rdbo.prod.cdc.mfms.dbo.outmessagestab"
       }
    }

  .envs: |-
    #{ Dynamic (custom for each connector)
    CONFIG_STORAGE_TOPIC="rdbo.prod.cdct.configs.mfms"
    OFFSET_STORAGE_TOPIC="rdbo.prod.cdct.offsets.mfms"
    STATUS_STORAGE_TOPIC="rdbo.prod.cdct.statuses.mfms"
    GROUP_ID=35
    OFFSET_FLUSH_INTERVAL_MS=1200
    OFFSET_FLUSH_TIMEOUT_MS=2500
    SHUTDOWN_TIMEOUT=2000
    #}

    #{ Static (rarely changed)
      #{ Common part
    REST_HOST_NAME="192.168.1.2"
    ADVERTISED_HOST_NAME="192.168.1.2"
    CONNECT_OFFSET_STORAGE_PARTITIONS=1
    CONNECT_CONFIG_STORAGE_PARTITIONS=1
    CONNECT_STATUS_STORAGE_PARTITIONS=1
    CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR=-1
    CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR=-1
    CONNECT_STATUS_STORAGE_REPLICATION_FACTOR=-1
    CONNECT_OFFSET_STORAGE_CLEANUP_POLICY="compact"
    CONNECT_CONFIG_STORAGE_CLEANUP_POLICY="compact"
    CONNECT_STATUS_STORAGE_CLEANUP_POLICY="compact"
      #}

      #{ for retail cluster of Kafka
    BOOTSTRAP_SERVERS="servername.domain.department:9093,servername"
    CONNECT_SECURITY_PROTOCOL="SSL"
    CONNECT_CONSUMER_SECURITY_PROTOCOL="SSL"
    CONNECT_PRODUCER_SECURITY_PROTOCOL="SSL"
    CONNECT_SSL_.rrrTSTORE_LOCATION="/kafka/.ssl/kafka.retail.prod..rrrtstore.jks"
    CONNECT_PRODUCER_SSL_.rrrTSTORE_LOCATION="/kafka/.ssl/kafka.retail.prod..rrrtstore.jks"
    CONNECT_CONSUMER_SSL_.rrrTSTORE_LOCATION="/kafka/.ssl/kafka.retail.prod..rrrtstore.jks"
    CONNECT_SSL_.rrrTSTORE_PASSWORD="password"
    CONNECT_PRODUCER_SSL_.rrrTSTORE_PASSWORD="password"
    CONNECT_CONSUMER_SSL_.rrrTSTORE_PASSWORD="password"
      #}
    #}

  # only for extra properties that are not in base image's /kafka/config.orig/connect-distributed.properties file
  extra.connect-distributed.properties: |
    # nothing extra (yet)

  log4j.properties: |-
    log4j.rootLogger=INFO, console, gelf

    # Disable excessive reflection warnings - KAFKA-5229
    log4j.logger.org.reflections=ERROR

    log4j.appender.console=org.apache.log4j.ConsoleAppender
    log4j.appender.console.threshold=INFO
    log4j.appender.console.layout=org.apache.log4j.PatternLayout
    log4j.appender.console.layout.ConversionPattern=%d{ISO8601} %-5p  %X{dbz.connectorType}|%X{dbz.connectorName}|%X{dbz.connectorContext}  %m   [%c]%n

    log4j.appender.gelf=biz.paluch.logging.gelf.log4j.GelfLogAppender
    log4j.appender.gelf.Threshold=WARN
    log4j.appender.gelf.Host=udp:mbr-log.bank.rrr.department
    log4j.appender.gelf.Port=12201
    log4j.appender.gelf.Version=1.1
    log4j.appender.gelf.Facility=logstash-gelf
    log4j.appender.gelf.ExtractStackTrace=true
    log4j.appender.gelf.FilterStackTrace=true
    log4j.appender.gelf.MdcProfiling=true
    log4j.appender.gelf.IncludeFullMdc=true
    log4j.appender.gelf.AdditionalFields=namespace=dbzm-prod
    log4j.appender.gelf.TimestampPattern=yyyy-MM-dd'T'HH:mm:ss.SSS