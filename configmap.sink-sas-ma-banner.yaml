apiVersion: v1
kind: ConfigMap
metadata:
  name: sink-sas-ma-banner
  namespace: dbzm-prod
data:
  sink.sasma.integration.intrbbannerstatus.json: |-
    {
       "name": "sink.sasma.integration.intrbbannerstatus",
       "config": {
          "connector.class": "io.confluent.connect.jdbc.JdbcSinkConnector",
          "connection.url": "jdbc:oracle:thin:@(description=(address=(host=rrr-dbpmos0sm-scan.bank.rrr.department)(protocol=tcp)(port=1525))(connect_data=(service_name=smnrt_primary)(server=dedicated)(UR=A)))",
          "connection.user": "user",
          "connection.password": "password",
          "topics": "sasma.prod.advertising.banner.create.result",
          "table.name.format": "INTEGRATION.INT_RB_BANNER_STATUS",
          "transforms.convert.type": "org.apache.kafka.connect.transforms.TimestampConverter$Value",
          "transforms.convert.target.type": "Timestamp",
          "transforms.convert.format": "yyyy-MM-dd HH:mm:ss",
          "transforms.convert.field": "STATUS_DATE",
          "insert.mode": "upsert",
          "pk.mode": "record_key",
          "pk.fields": "MESSAGE_ID",
          "auto.create": "false",
          "auto.evolve": "false",
          "delete.enabled": "false",
          "fields.whitelist": "MESSAGE_ID, STATUS_DATE, STATUS, ERROR_TEXT",
          "quote.sql.identifiers": "never"
       }
    }

  .envs: |-
    #{ Dynamic (custom for each connector)
    CONFIG_STORAGE_TOPIC="sasma.prod.cdct.sink.configs.banner"
    OFFSET_STORAGE_TOPIC="sasma.prod.cdct.dummy"
    STATUS_STORAGE_TOPIC="sasma.prod.cdct.sink.statuses.banner"
    GROUP_ID=sink-sas-ma-banner
    OFFSET_FLUSH_INTERVAL_MS=1200
    OFFSET_FLUSH_TIMEOUT_MS=2500
    SHUTDOWN_TIMEOUT=2000
    #}

    #{ Static (rarely changed)
      #{ Common part
    REST_HOST_NAME="192.168.1.2"
    ADVERTISED_HOST_NAME="192.168.1.2"
    CONNECT_OFFSET_STORAGE_PARTITIONS=1
    CONNECT_CONFIG_STORAGE_PARTITIONS=1
    CONNECT_STATUS_STORAGE_PARTITIONS=1
    CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR=-1
    CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR=-1
    CONNECT_STATUS_STORAGE_REPLICATION_FACTOR=-1
    CONNECT_OFFSET_STORAGE_CLEANUP_POLICY="compact"
    CONNECT_CONFIG_STORAGE_CLEANUP_POLICY="compact"
    CONNECT_STATUS_STORAGE_CLEANUP_POLICY="compact"
      #}

      #{ for retail cluster of Kafka
    BOOTSTRAP_SERVERS="servername.domain.department:9093,servername"
    CONNECT_SECURITY_PROTOCOL="SSL"
    CONNECT_CONSUMER_SECURITY_PROTOCOL="SSL"
    CONNECT_PRODUCER_SECURITY_PROTOCOL="SSL"
    CONNECT_SSL_.rrrTSTORE_LOCATION="/kafka/.ssl/kafka.retail.prod..rrrtstore.jks"
    CONNECT_PRODUCER_SSL_.rrrTSTORE_LOCATION="/kafka/.ssl/kafka.retail.prod..rrrtstore.jks"
    CONNECT_CONSUMER_SSL_.rrrTSTORE_LOCATION="/kafka/.ssl/kafka.retail.prod..rrrtstore.jks"
    CONNECT_SSL_.rrrTSTORE_PASSWORD="password"
    CONNECT_PRODUCER_SSL_.rrrTSTORE_PASSWORD="password"
    CONNECT_CONSUMER_SSL_.rrrTSTORE_PASSWORD="password"
      #}
    #}

  # only for extra properties that are not in base image's /kafka/config.orig/connect-distributed.properties file
  extra.connect-distributed.properties: |

  log4j.properties: |-
    log4j.rootLogger=INFO, console, gelf

    # Disable excessive reflection warnings - KAFKA-5229
    log4j.logger.org.reflections=ERROR

    log4j.appender.console=org.apache.log4j.ConsoleAppender
    log4j.appender.console.threshold=INFO
    log4j.appender.console.layout=org.apache.log4j.PatternLayout
    log4j.appender.console.layout.ConversionPattern=%d{ISO8601} %-5p  %X{dbz.connectorType}|%X{dbz.connectorName}|%X{dbz.connectorContext}  %m   [%c]%n

    log4j.appender.gelf=biz.paluch.logging.gelf.log4j.GelfLogAppender
    log4j.appender.gelf.Threshold=WARN
    log4j.appender.gelf.Host=udp:mbr-log.bank.rrr.department
    log4j.appender.gelf.Port=12201
    log4j.appender.gelf.Version=1.1
    log4j.appender.gelf.Facility=logstash-gelf
    log4j.appender.gelf.ExtractStackTrace=true
    log4j.appender.gelf.FilterStackTrace=true
    log4j.appender.gelf.MdcProfiling=true
    log4j.appender.gelf.IncludeFullMdc=true
    log4j.appender.gelf.AdditionalFields=namespace=dbzm-prod
    log4j.appender.gelf.TimestampPattern=yyyy-MM-dd'T'HH:mm:ss.SSS
