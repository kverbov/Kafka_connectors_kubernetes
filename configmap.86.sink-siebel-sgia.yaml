apiVersion: v1
kind: ConfigMap
metadata:
  name: sink-siebel-sgia
  namespace: dbzm-prod
data:
  sink-siebel-s-contact-sgia.connector.config.json: |-
      {
         "name": "sink-siebel-s-contact-sgia.connector",
         "config": {
             "connector.class":"io.confluent.connect.jdbc.JdbcSinkConnector",
             "tasks.max":"1",
             "topics":"sgia.siebel.prod.cdc.S_CONTACT",
             "connection.url": "jdbc:postgresql://192.168.1.2:5432/bank",
             "connection.user": "user",
             "connection.password": "password",
             "auto.create": "true",
             "auto.evolve": "true",
             "transforms": "dropTopicPrefix, unwrap",
             "transforms.dropTopicPrefix.type":"org.apache.kafka.connect.transforms.RegexRouter",
             "transforms.dropTopicPrefix.regex":"([^.]+)\\.([^.]+)\\.([^.]+)\\.([^.]+)\\.([^.]+)",
             "transforms.dropTopicPrefix.replacement":"$5",
             "transforms.unwrap.type": "io.debezium.transforms.ExtractNewRecordState",
             "transforms.unwrap.drop.tombstones": "true",
             "table.name.format": "crm_kafka.${topic}",
             "insert.mode": "upsert",
             "pk.fields": "ROW_ID",
             "pk.mode": "record_value"
         }
      }

  sink-siebel-s-user-sgia.connector.config.json: |-
      {
         "name": "sink-siebel-s-user-sgia.connector",
         "config": {
             "connector.class":"io.confluent.connect.jdbc.JdbcSinkConnector",
             "tasks.max":"1",
             "topics":"sgia.siebel.prod.cdc.S_USER",
             "connection.url": "jdbc:postgresql://192.168.1.2:5432/bank",
             "connection.user": "user",
             "connection.password": "password",
             "auto.create": "true",
             "auto.evolve": "true",
             "transforms": "dropTopicPrefix, unwrap",
             "transforms.dropTopicPrefix.type":"org.apache.kafka.connect.transforms.RegexRouter",
             "transforms.dropTopicPrefix.regex":"([^.]+)\\.([^.]+)\\.([^.]+)\\.([^.]+)\\.([^.]+)",
             "transforms.dropTopicPrefix.replacement":"$5",
             "transforms.unwrap.type": "io.debezium.transforms.ExtractNewRecordState",
             "transforms.unwrap.drop.tombstones": "true",
             "table.name.format": "crm_kafka.${topic}",
             "insert.mode": "upsert",
             "pk.fields": "ROW_ID",
             "pk.mode": "record_value"
         }
      }

  sink-siebel-cx-consent-sgia.connector.config.json: |-
      {
         "name": "sink-siebel-cx-consent-sgia.connector",
         "config": {
             "connector.class":"io.confluent.connect.jdbc.JdbcSinkConnector",
             "tasks.max":"1",
             "topics":"sgia.siebel.prod.cdc.CX_CONSENT",
             "connection.url": "jdbc:postgresql://192.168.1.2:5432/bank",
             "connection.user": "user",
             "connection.password": "password",
             "auto.create": "true",
             "auto.evolve": "true",
             "transforms": "dropTopicPrefix, unwrap",
             "transforms.dropTopicPrefix.type":"org.apache.kafka.connect.transforms.RegexRouter",
             "transforms.dropTopicPrefix.regex":"([^.]+)\\.([^.]+)\\.([^.]+)\\.([^.]+)\\.([^.]+)",
             "transforms.dropTopicPrefix.replacement":"$5",
             "transforms.unwrap.type": "io.debezium.transforms.ExtractNewRecordState",
             "transforms.unwrap.drop.tombstones": "true",
             "table.name.format": "crm_kafka.${topic}",
             "insert.mode": "upsert",
             "pk.fields": "ROW_ID",
             "pk.mode": "record_value"
         }
      }

  sink-siebel-cx-consent-type-sgia.connector.config.json: |-
      {
         "name": "sink-siebel-cx-consent-type-sgia.connector",
         "config": {
             "connector.class":"io.confluent.connect.jdbc.JdbcSinkConnector",
             "tasks.max":"1",
             "topics":"sgia.siebel.prod.cdc.CX_CONSENT_TYPE",
             "connection.url": "jdbc:postgresql://192.168.1.2:5432/bank",
             "connection.user": "user",
             "connection.password": "password",
             "auto.create": "true",
             "auto.evolve": "true",
             "transforms": "dropTopicPrefix, unwrap",
             "transforms.dropTopicPrefix.type":"org.apache.kafka.connect.transforms.RegexRouter",
             "transforms.dropTopicPrefix.regex":"([^.]+)\\.([^.]+)\\.([^.]+)\\.([^.]+)\\.([^.]+)",
             "transforms.dropTopicPrefix.replacement":"$5",
             "transforms.unwrap.type": "io.debezium.transforms.ExtractNewRecordState",
             "transforms.unwrap.drop.tombstones": "true",
             "table.name.format": "crm_kafka.${topic}",
             "insert.mode": "upsert",
             "pk.fields": "ROW_ID",
             "pk.mode": "record_value"
         }
      }

  sink-siebel-cx-cont-idents-sgia.connector.config.json: |-
      {
         "name": "sink-siebel-cx-cont-idents-sgia.connector",
         "config": {
             "connector.class":"io.confluent.connect.jdbc.JdbcSinkConnector",
             "tasks.max":"1",
             "topics":"sgia.siebel.prod.cdc.CX_CONT_IDENTS",
             "connection.url": "jdbc:postgresql://192.168.1.2:5432/bank",
             "connection.user": "user",
             "connection.password": "password",
             "auto.create": "true",
             "auto.evolve": "true",
             "transforms": "dropTopicPrefix, unwrap",
             "transforms.dropTopicPrefix.type":"org.apache.kafka.connect.transforms.RegexRouter",
             "transforms.dropTopicPrefix.regex":"([^.]+)\\.([^.]+)\\.([^.]+)\\.([^.]+)\\.([^.]+)",
             "transforms.dropTopicPrefix.replacement":"$5",
             "transforms.unwrap.type": "io.debezium.transforms.ExtractNewRecordState",
             "transforms.unwrap.drop.tombstones": "true",
             "table.name.format": "crm_kafka.${topic}",
             "insert.mode": "upsert",
             "pk.fields": "ROW_ID",
             "pk.mode": "record_value"
         }
      }


  sink-siebel-employee-sgia.connector.config.json: |-
      {
         "name": "sink-siebel-employee-sgia.connector",
         "config": {
             "connector.class":"io.confluent.connect.jdbc.JdbcSinkConnector",
             "tasks.max":"1",
             "topics":"sgia.siebel.prod.cdc.employee",
             "connection.url": "jdbc:postgresql://192.168.1.2:5432/bank",
             "connection.user": "user",
             "connection.password": "password",
             "auto.create": "true",
             "auto.evolve": "true",
             "transforms": "dropTopicPrefix, unwrap",
             "transforms.dropTopicPrefix.type":"org.apache.kafka.connect.transforms.RegexRouter",
             "transforms.dropTopicPrefix.regex":"([^.]+)\\.([^.]+)\\.([^.]+)\\.([^.]+)\\.([^.]+)",
             "transforms.dropTopicPrefix.replacement":"$5",
             "transforms.unwrap.type": "io.debezium.transforms.ExtractNewRecordState",
             "transforms.unwrap.drop.tombstones": "true",
             "table.name.format": "crm_kafka.${topic}",
             "insert.mode": "upsert",
             "pk.fields": "ROW_ID",
             "pk.mode": "record_value"
         }
      }

  sink-siebel-s-per-comm-addr-sgia.connector.config.json: |-
      {
         "name": "sink-siebel-s-per-comm-addr-sgia.connector",
         "config": {
             "connector.class":"io.confluent.connect.jdbc.JdbcSinkConnector",
             "tasks.max":"1",
             "topics":"sgia.siebel.prod.cdc.S_PER_COMM_ADDR",
             "connection.url": "jdbc:postgresql://192.168.1.2:5432/bank",
             "connection.user": "user",
             "connection.password": "password",
             "auto.create": "true",
             "auto.evolve": "true",
             "transforms": "dropTopicPrefix, unwrap",
             "transforms.dropTopicPrefix.type":"org.apache.kafka.connect.transforms.RegexRouter",
             "transforms.dropTopicPrefix.regex":"([^.]+)\\.([^.]+)\\.([^.]+)\\.([^.]+)\\.([^.]+)",
             "transforms.dropTopicPrefix.replacement":"$5",
             "transforms.unwrap.type": "io.debezium.transforms.ExtractNewRecordState",
             "transforms.unwrap.drop.tombstones": "true",
             "table.name.format": "crm_kafka.${topic}",
             "insert.mode": "upsert",
             "pk.fields": "ROW_ID",
             "pk.mode": "record_value"
         }
      }

  sink-siebel-cx-prem-pm-sgia.connector.config.json: |-
      {
         "name": "sink-siebel-cx-prem-pm-sgia.connector",
         "config": {
             "connector.class":"io.confluent.connect.jdbc.JdbcSinkConnector",
             "tasks.max":"1",
             "topics":"sgia.siebel.prod.cdc.cx_prem_pm",
             "connection.url": "jdbc:postgresql://192.168.1.2:5432/bank",
             "connection.user": "user",
             "connection.password": "password",
             "auto.create": "true",
             "auto.evolve": "true",
             "transforms": "dropTopicPrefix, unwrap",
             "transforms.dropTopicPrefix.type":"org.apache.kafka.connect.transforms.RegexRouter",
             "transforms.dropTopicPrefix.regex":"([^.]+)\\.([^.]+)\\.([^.]+)\\.([^.]+)\\.([^.]+)",
             "transforms.dropTopicPrefix.replacement":"$5",
             "transforms.unwrap.type": "io.debezium.transforms.ExtractNewRecordState",
             "transforms.unwrap.drop.tombstones": "true",
             "table.name.format": "crm_kafka.${topic}",
             "insert.mode": "upsert",
             "pk.fields": "CLIENT_ID",
             "pk.mode": "record_value"
         }
      }

  sink-siebel-cx-vip-spc-attr-sgia.connector.config.json: |-
      {
         "name": "sink-siebel-cx-vip-spc-attr-sgia.connector",
         "config": {
             "connector.class":"io.confluent.connect.jdbc.JdbcSinkConnector",
             "tasks.max":"1",
             "topics":"sgia.siebel.prod.cdc.cx_vip_spc_attr",
             "connection.url": "jdbc:postgresql://192.168.1.2:5432/bank",
             "connection.user": "user",
             "connection.password": "password",
             "auto.create": "true",
             "auto.evolve": "true",
             "transforms": "dropTopicPrefix, unwrap",
             "transforms.dropTopicPrefix.type":"org.apache.kafka.connect.transforms.RegexRouter",
             "transforms.dropTopicPrefix.regex":"([^.]+)\\.([^.]+)\\.([^.]+)\\.([^.]+)\\.([^.]+)",
             "transforms.dropTopicPrefix.replacement":"$5",
             "transforms.unwrap.type": "io.debezium.transforms.ExtractNewRecordState",
             "transforms.unwrap.drop.tombstones": "true",
             "table.name.format": "crm_kafka.${topic}",
             "insert.mode": "upsert",
             "pk.fields": "ROW_ID",
             "pk.mode": "record_value"
         }
      }

  sink-siebel-cx_glddbl_con-sgia.connector.config.json: |-
      {
         "name": "sink-siebel-cx_glddbl_con-sgia.connector",
         "config": {
             "connector.class":"io.confluent.connect.jdbc.JdbcSinkConnector",
             "tasks.max":"1",
             "topics":"sgia.siebel.prod.cdc.CX_GLDDBL_CON",
             "connection.url": "jdbc:postgresql://192.168.1.2:5432/bank",
             "connection.user": "user",
             "connection.password": "password",
             "auto.create": "true",
             "auto.evolve": "true",
             "transforms": "dropTopicPrefix, unwrap",
             "transforms.dropTopicPrefix.type":"org.apache.kafka.connect.transforms.RegexRouter",
             "transforms.dropTopicPrefix.regex":"([^.]+)\\.([^.]+)\\.([^.]+)\\.([^.]+)\\.([^.]+)",
             "transforms.dropTopicPrefix.replacement":"$5",
             "transforms.unwrap.type": "io.debezium.transforms.ExtractNewRecordState",
             "transforms.unwrap.drop.tombstones": "true",
             "table.name.format": "crm_kafka.${topic}",
             "insert.mode": "upsert",
             "pk.fields": "ROW_ID",
             "pk.mode": "record_value"
         }
      }

    
  .envs: |-
    #{ Dynamic (custom for each connector)
    CONFIG_STORAGE_TOPIC="siebel.prod.sgia.cdct.sink.configs"
    OFFSET_STORAGE_TOPIC="siebel.prod.sgia.cdct.sink.offsets"
    STATUS_STORAGE_TOPIC="siebel.prod.sgia.cdct.sink.statuses"
    GROUP_ID=86
    OFFSET_FLUSH_INTERVAL_MS=1200
    OFFSET_FLUSH_TIMEOUT_MS=2500
    SHUTDOWN_TIMEOUT=2000
    #}

    #{ Static (rarely changed)
      #{ Common part
    REST_HOST_NAME="192.168.1.2"
    ADVERTISED_HOST_NAME="192.168.1.2"
    CONNECT_OFFSET_STORAGE_PARTITIONS=1
    CONNECT_CONFIG_STORAGE_PARTITIONS=1
    CONNECT_STATUS_STORAGE_PARTITIONS=1
    CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR=-1
    CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR=-1
    CONNECT_STATUS_STORAGE_REPLICATION_FACTOR=-1
    CONNECT_OFFSET_STORAGE_CLEANUP_POLICY="compact"
    CONNECT_CONFIG_STORAGE_CLEANUP_POLICY="compact"
    CONNECT_STATUS_STORAGE_CLEANUP_POLICY="compact"
      #}

      #{ for retail cluster of Kafka
    BOOTSTRAP_SERVERS="servername.domain.department:9093,servername"
    CONNECT_SECURITY_PROTOCOL="SSL"
    CONNECT_CONSUMER_SECURITY_PROTOCOL="SSL"
    CONNECT_PRODUCER_SECURITY_PROTOCOL="SSL"
    CONNECT_SSL_.rrrTSTORE_LOCATION="/kafka/.ssl/kafka.retail.prod..rrrtstore.jks"
    CONNECT_PRODUCER_SSL_.rrrTSTORE_LOCATION="/kafka/.ssl/kafka.retail.prod..rrrtstore.jks"
    CONNECT_CONSUMER_SSL_.rrrTSTORE_LOCATION="/kafka/.ssl/kafka.retail.prod..rrrtstore.jks"
    CONNECT_SSL_.rrrTSTORE_PASSWORD="password"
    CONNECT_PRODUCER_SSL_.rrrTSTORE_PASSWORD="password"
    CONNECT_CONSUMER_SSL_.rrrTSTORE_PASSWORD="password"
      #}
    #}

  # only for extra properties that are not in base image's /kafka/config.orig/connect-distributed.properties file
  extra.connect-distributed.properties: |
    # nothing extra (yet)

  log4j.properties: |-
    log4j.rootLogger=INFO, console, gelf

    # Disable excessive reflection warnings - KAFKA-5229
    log4j.logger.org.reflections=ERROR

    log4j.appender.console=org.apache.log4j.ConsoleAppender
    log4j.appender.console.threshold=INFO
    log4j.appender.console.layout=org.apache.log4j.PatternLayout
    log4j.appender.console.layout.ConversionPattern=%d{ISO8601} %-5p  %X{dbz.connectorType}|%X{dbz.connectorName}|%X{dbz.connectorContext}  %m   [%c]%n

    log4j.appender.gelf=biz.paluch.logging.gelf.log4j.GelfLogAppender
    log4j.appender.gelf.Threshold=WARN
    log4j.appender.gelf.Host=udp:mbr-log.bank.rrr.department
    log4j.appender.gelf.Port=12201
    log4j.appender.gelf.Version=1.1
    log4j.appender.gelf.Facility=logstash-gelf
    log4j.appender.gelf.ExtractStackTrace=true
    log4j.appender.gelf.FilterStackTrace=true
    log4j.appender.gelf.MdcProfiling=true
    log4j.appender.gelf.IncludeFullMdc=true
    log4j.appender.gelf.AdditionalFields=namespace=dbzm-prod
    log4j.appender.gelf.TimestampPattern=yyyy-MM-dd'T'HH:mm:ss.SSS
