apiVersion: v1
kind: ConfigMap
metadata:
  name: mm-rbkafka
  namespace: dbzm-prod
binaryData:
  kafka.integration.layer..rrrtstore.jks: 
  gtsretailkafka.keytab: 
data:
  mm-rbkafka.connector.config.json: |-
    {
      "name": "mm-rbkafka",
      "config": {
          "connector.class": "org.apache.kafka.connect.mirror.MirrorSourceConnector",
          "source.cluster.alias": "rbkafka",
          "target.cluster.alias": "retail",
          "source.cluster.bootstrap.servers": "kafka.domain.department:9092",
          "target.cluster.bootstrap.servers": "servername.domain.department:9093,servername",
          "source.group.id": "gtsretailkafka",
          "target.group.id": "mm-rbkafka",
          "topics": " .*PHUB.SendDocumentPaymentFinishStatus, .*PHUB.SendDocumentPaymentProcStatus",
          "topics.blacklist": ".*-connect-.*",
          "sync.topic.configs.enabled": "false",
          "sync.topic.acls.enabled": "false",
          "refresh.topics.enabled": "true",
          "refresh.topics.interval.seconds": "60",
          "refresh.groups.enabled": "false",
          "sync.group.offsets.enabled": "false",
          "emit.heartbeats.enabled":  "false",
          "emit.checkpoints.enabled":  "false",
          "source.cluster.security.protocol" : "SASL_SSL",
          "source.cluster.sasl.mechanism" : "GSSAPI",
          "source.cluster.sasl.kerberos.service.name" : "kafka",
          "source.cluster.sasl.jaas.config" : "com.sun.security.auth.module.Krb5LoginModule required useKeyTab=true storeKey=true keyTab=\"/kafka/mounted/gtsretailkafka.keytab\" principal=\"gtsretailkafka@domain.department\";",
          "source.cluster.client.dns.lookup": "use_all_dns_ips",
          "source.cluster.ssl..rrrtstore.location": "/kafka/mounted/kafka.integration.layer..rrrtstore.jks",
          "source.cluster.ssl..rrrtstore.password": "password",
          "target.cluster.security.protocol": "SSL",
          "target.cluster.client.dns.lookup": "use_all_dns_ips",
          "target.cluster.ssl..rrrtstore.location": "/kafka/.ssl/kafka.retail.prod..rrrtstore.jks",
          "target.cluster.ssl..rrrtstore.password": "password"
      }
    }

  krb5.conf: |-
    [libdefaults]
      renew_lifetime = 7d
      forwardable = true
      default_realm = domain.department
      ticket_lifetime = 24h
      dns_lookup_realm = false
      dns_lookup_kdc = false
      default_ccache_name = /tmp/krb5cc_%{uid}

    [domain_realm]
      .domain.department = domain.department
      domain.department = domain.department

    [realms]
      domain.department = {
        admin_server = servername.domain.department
        kdc = servername.domain.department
      }

  .envs: |-
    #{ Dynamic (custom for each connector)
    CONFIG_STORAGE_TOPIC="rbkafka.prod.mm.configs"
    OFFSET_STORAGE_TOPIC="rbkafka.prod.mm.offsets"
    STATUS_STORAGE_TOPIC="rbkafka.prod.mm.statuses"
    GROUP_ID=mm-rbkafka
    OFFSET_FLUSH_INTERVAL_MS=1200
    OFFSET_FLUSH_TIMEOUT_MS=2500
    SHUTDOWN_TIMEOUT=2000
    KEY_CONVERTER="org.apache.kafka.connect.converters.ByteArrayConverter"
    CONNECT_KEY_CONVERTER_SCHEMAS_ENABLE=false
    VALUE_CONVERTER="org.apache.kafka.connect.converters.ByteArrayConverter"
    CONNECT_VALUE_CONVERTER_SCHEMAS_ENABLE=false
    KAFKA_OPTS="
    -Dsun.security.krb5.debug=false
    -Djava.security.kservername.conf
    -Djavax.security.auth.useSubjectCredsOnly=false"
    #}

    #{ Static (rarely changed)
      #{ Common part
    REST_HOST_NAME="192.168.1.2"
    ADVERTISED_HOST_NAME="192.168.1.2"
    CONNECT_OFFSET_STORAGE_PARTITIONS=1
    CONNECT_CONFIG_STORAGE_PARTITIONS=1
    CONNECT_STATUS_STORAGE_PARTITIONS=1
    CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR=-1
    CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR=-1
    CONNECT_STATUS_STORAGE_REPLICATION_FACTOR=-1
    CONNECT_OFFSET_STORAGE_CLEANUP_POLICY="compact"
    CONNECT_CONFIG_STORAGE_CLEANUP_POLICY="compact"
    CONNECT_STATUS_STORAGE_CLEANUP_POLICY="compact"
      #}

      #{ for retail cluster of Kafka
    BOOTSTRAP_SERVERS="servername.domain.department:9093,servername"
    CONNECT_SECURITY_PROTOCOL="SSL"
    CONNECT_CONSUMER_SECURITY_PROTOCOL="SSL"
    CONNECT_PRODUCER_SECURITY_PROTOCOL="SSL"
    CONNECT_SSL_.rrrTSTORE_LOCATION="/kafka/.ssl/kafka.retail.prod..rrrtstore.jks"
    CONNECT_PRODUCER_SSL_.rrrTSTORE_LOCATION="/kafka/.ssl/kafka.retail.prod..rrrtstore.jks"
    CONNECT_CONSUMER_SSL_.rrrTSTORE_LOCATION="/kafka/.ssl/kafka.retail.prod..rrrtstore.jks"
    CONNECT_SSL_.rrrTSTORE_PASSWORD="password"
    CONNECT_PRODUCER_SSL_.rrrTSTORE_PASSWORD="password"
    CONNECT_CONSUMER_SSL_.rrrTSTORE_PASSWORD="password"
      #}
    #}

  # only for extra properties that are not in base image's /kafka/config.orig/connect-distributed.properties file
  extra.connect-distributed.properties: |-
    # nothing extra (yet)

  log4j.properties: |-
    log4j.rootLogger=INFO, console, gelf

    # Disable excessive reflection warnings - KAFKA-5229
    log4j.logger.org.reflections=ERROR

    log4j.appender.console=org.apache.log4j.ConsoleAppender
    log4j.appender.console.threshold=INFO
    log4j.appender.console.layout=org.apache.log4j.PatternLayout
    log4j.appender.console.layout.ConversionPattern=%d{ISO8601} %-5p  %X{dbz.connectorType}|%X{dbz.connectorName}|%X{dbz.connectorContext}  %m   [%c]%n

    log4j.appender.gelf=biz.paluch.logging.gelf.log4j.GelfLogAppender
    log4j.appender.gelf.Threshold=WARN
    log4j.appender.gelf.Host=udp:mbr-log.bank.rrr.department
    log4j.appender.gelf.Port=12201
    log4j.appender.gelf.Version=1.1
    log4j.appender.gelf.Facility=logstash-gelf
    log4j.appender.gelf.ExtractStackTrace=true
    log4j.appender.gelf.FilterStackTrace=true
    log4j.appender.gelf.MdcProfiling=true
    log4j.appender.gelf.IncludeFullMdc=true
    log4j.appender.gelf.AdditionalFields=namespace=dbzm-prod
    log4j.appender.gelf.TimestampPattern=yyyy-MM-dd'T'HH:mm:ss.SSS
